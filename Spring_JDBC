JDBC(Java DataBase Connectivity)
 - JDBC는 DB에 접근할 수 있도록 java에서 제공하는 API이다.
 - JDBC는 데이터베이스에서 자료를 쿼리하거나 업데이트 하는 방법을 제공한다.
 - JDBC API의 문제점
 	* 쿼리를 실행하기 전과 후에 많은 양의 코드를 작성해야 한다.
 	 예) 오라클 데이터베이스 로딩, DB와 연결 생성,  명령문(쿼리문), ResultSet 연결, 닫기 등등
 	* 데이터베이스 로직에서 예외 처리 코드를 수행해야 한다.
 	* 이러한 코드를 메서드 호출 시마다 반복적으로 작성해야 한다.
 	
 	
 	Spring JDBCTemplate 이란?
 	- JDBCTemplate은 Spring JDBC 접근 방법 중 하나로, 내부적으로 JDBC API를 사용하지만
 	위의 내용과 같은 문제점을 제거한 형태로 Spring에서 제공하는 Class이다. 
 	
 	Spring JDBC가 하는 일
 	* Connection 열기와 닫기
 	* PreparedStatement 준비와 닫기
 	* PreparedStatement 실행
 	* ResultSet Loop 처리
 	* Exception 처리
 	* Transaction 처리
 	
 	-Spring JDBC에서 개발자가 할 일은 핵심적으로 해야 할 작업만 해 주면 
 	나머지는 Spring Framework에서 알아서 처리해준다.
 	
 	
 	
 	
 	
 	DataSource란?
 	- DateSource는 JDBC 명세서의 일부분이면서 일반적인 연결 공장임.
 	즉, DB와 관계된 connection(DBCP 방식) 정보를 담고 있음.
 	* DB종류(oracle.jdbc.driver.OracleDriver)
 	* url 정보(jdbc:oracle:thin:@localhost:1521:XE)
 	* 계정 정보 (genie)
 	* 계정 비밀번호 (1234)
 
 	-Spring JDBCTemplate 클래스를 사용하기 위해서는 pom.xml 파일에 아래와 같은 라이브러리를 등록해 주어야 한다.
 	
 	<dependency>
  		 <groupId>org.springframework</groupId>
  	 	<artifactId>spring-jdbc</artifactId>
  	 	<version>${org.springframework-version}</version>
	</dependency>